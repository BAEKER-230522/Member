server:
  port: 8081

spring:
  profiles:
    default:

  application:
    name: baeker-member

  mvc:
    hidden-method:
      filter:
        enabled: true

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/bk__member?useUnicode=true&characterEncoding=utf8&autoReconnect=true&serverTimezone=Asia/Seoul
    username: ENC(MrlF9UZUaHufCgWLRE3ipQ==)
    password: ENC(dhw6nRBS+50xHhqPVFnZdw==)

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        show_sql: true

  kafka:
    bootstrap-servers: ${custom.server}:9092
    consumer:
      group-id: member
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      linger:
        ms: 10

#message:
#  topic:
#    member: "member"
#    study: "study"
#    solved-member: "solved-member"

eureka:
  instance:

    # IP 와 서버 포트를 통해 Id 설정
    instance-id: ${custom.server}:${server.port}

  client:
    service-url:
      # Eureka 서버 주소 (만약 2개 이상일경우 , 를 통해 연속 입력)
      defaultZone: http://${custom.server}:8761/eureka

logging.level:
  org.hibernate:
    SQL: debug
    orm.jdbc.bind: trace

custom:
  server: localhost

jasypt:
  encryptor:
    bean: jasyptStringEncryptor